server:
  port: 8081

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: rajat123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

    hibernate:
      ddl-auto: update
    show-sql: true

  application:
    name: User-Service
  config:
    import: configserver:http://localhost:8085/
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-35259508.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope:  internal
            client-id: 0oadr14gexGOMe37y5d7
            client-secret: 0XRfSABn2o5MzpljArUVJoWCn75kRPVboRBqocVdDpFxnbfgP3bTtOPoBpLtnDlS
        provider:
          okta:
            issuerUri: https://dev-35259508.okta.com/oauth2/default


#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

okta:
  oauth2:
    issuer: https://dev-35259508.okta.com/oauth2/default
    audience: api://default
    client-id: 0oadr14gexGOMe37y5d7
    client-secret: 0XRfSABn2o5MzpljArUVJoWCn75kRPVboRBqocVdDpFxnbfgP3bTtOPoBpLtnDlS
    scopes: openid, profile, email, offline_access

